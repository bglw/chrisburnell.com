////
/// Main
/// @group layout
////

.main {
	@include owl;
	@include v(padding-block-end, gigantic);
}

.content {
	display: grid;
	align-items: start;
	grid-template-columns: 1fr;

	@include media("above:medium") {
		grid-template-columns:
			[marginalia-start]
			14em
			[marginalia-end content-start outdent-start]
			repeat(6, 1fr)
			[content-end outdent-end];
		grid-template-rows:
			[breadcrumbs-start]
			auto
			[breadcrumbs-end title-start]
			auto
			[title-end description-start]
			auto
			[description-end content-start sparkline-start]
			auto
			[sparkline-end meta-start]
			max-content
			[meta-end content-end ads-start]
			auto
			[ads-end];
	}

	@include media("above:large") {
		grid-template-columns:
			[marginalia-start]
			16em
			[marginalia-end]
			v(size, gutter)
			[content-start]
			repeat(6, 1fr)
			[content-end]
			v(size, gap)
			[outdent-start]
			10em
			[outdent-end];
	}

	&.full {
		@include media("above:medium") {
			grid-template-columns:
				[content-start outdent-start marginalia-start]
				repeat(6, 1fr)
				[content-end outdent-end marginalia-end];
		}
	}

	&.wide {
		@include media("above:medium") {
			grid-template-columns:
				1fr
				[content-start outdent-start marginalia-start]
				repeat(6, 1fr)
				[content-end outdent-end marginalia-end]
				1fr;
		}
	}

	@include media("print") {
		display: block;
	}

	& > %collection-content {
		@include v(max-inline-size, line-length-clamp);
	}
}

.breadcrumbs {
	grid-column: marginalia / content;
	grid-row: breadcrumbs;
	color: h(kaiser);
	@include v(margin-block-start, gigantic);

	@include media("below:medium") {
		display: none;
	}

	li {
		display: inline-block;
		white-space: nowrap;

		&:not(:first-child) {
			&::before {
				content: "â†’";
				display: inline-block;
				@include v(padding-inline, small);
			}
		}
	}

	a {
		color: inherit;
	}
}

.title {
	@include v(padding-block, gigantic);
	@include v(padding-inline, gutter);
	margin-inline: calc(v(size, gutter) * -1);
	overflow: hidden;

	.breadcrumbs ~ & {
		@include v(padding-block-start, medium);
	}

	@include media("above:medium") {
		grid-column: marginalia / content;
		grid-row: title;
	}
}

.description {
	@include owl(small);
	@include font-family(serif);
	font-style: italic;

	@include media("above:medium") {
		grid-column: marginalia / content;
		grid-row: description;
	}

	.full &,
	.wide & {
		text-align: start;
	}

	.title[hidden] ~ &,
	.title.hidden ~ & {
		@include v(margin-block-start, gigantic);
	}

	p {
		@include v(max-inline-size, line-length-clamp);
	}

	%collection-anchors {
		color: inherit;
	}

	time {
		white-space: nowrap;
	}
}
.description--published {
	@include media("below:medium") {
		order: -1;
		margin-block: v(size, large) 0;
		@include v(font-size, small);
	}

	.title[hidden] ~ &,
	.title.hidden ~ & {
		@include media("below:medium") {
			@include v(margin-block-end, large);
		}
	}
}

.content__body {
	@include owl;
	@include v(margin-block-start, large);
	overflow: hidden;

	@include media("above:medium") {
		grid-column: content;
		grid-row: content;
		@include v(padding-inline-start, gutter);
	}

	&.full,
	&.wide {
		@include media("above:medium") {
			grid-column: content / outdent;
		}
	}

	.description--published ~ & {
		@include media("below:medium") {
			margin-block-start: 0;
		}
	}

	.title[hidden] ~ &,
	.title.hidden ~ & {
		@include media("above:medium") {
			@include v(margin-block-start, gigantic);
		}
	}
}
.e-content {
	@include owl;
}
.content__body,
.e-content {
	& > * + h2 {
		@include v(margin-block-start, gigantic);
	}
}

.meta {
	@include v(margin-block-start, large);

	@include media("above:medium") {
		grid-column: marginalia;
		grid-row: meta;
		align-self: stretch;
	}
}

.ads {
	@include media("above:medium") {
		grid-column: content;
		grid-row: ads;
	}
}

// Listing-Representative Sparkline
.content > spark-line {
	@include v(margin-block-start, large);
	justify-self: start;

	@include media("above:medium") {
		grid-column: marginalia;
		grid-row: sparkline;
	}
}

// Table of Contents, meta box variant
.table-of-contents {
	$background: mix(map-get($palette, "thunder"), map-get($palette, "milou"), map-get($opacities, "delta") * 100%);
	// prettier-ignore
	background:
		linear-gradient(#{$background} 30%, transparent),
		linear-gradient(transparent, #{$background} 70%) 0 100%,
		radial-gradient(farthest-side at 50% 0, #{h(thunder, gamma)}, transparent),
		radial-gradient(farthest-side at 50% 100%, #{h(thunder, gamma)}, transparent) 0 100%;
	background-color: #{$background};
	// prettier-ignore
	background-size:
		100% #{v(size, large)},
		100% #{v(size, large)},
		100% #{v(font-size, small)},
		100% #{v(font-size, small)};
	// prettier-ignore
	background-attachment:
		local,
		local,
		scroll,
		scroll;
	background-repeat: no-repeat;
	overflow-x: hidden;
	overflow-y: auto;
	overscroll-behavior: contain;

	@include media("below:medium") {
		max-block-size: 60vh;
	}

	@include media("above:medium") {
		max-block-size: calc(60vh - #{v(size, medium)} * 2);
		position: sticky;
		@include v(top, medium);
	}

	li {
		&::marker {
			color: h(kaiser);
		}
	}
}
