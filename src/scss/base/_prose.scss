////
/// Prose
/// @group base
////

:is(abbr, dfn)[title] {
	color: h(dove);
	font-style: italic;
	font-weight: v(font-weight) !important;
	border-block-end: v(size, border-thin) dotted h(dove);
	cursor: help;

	a & {
		border-block-end-width: 0;
	}
}
:is(abbr, dfn)[title],
ins {
	text-decoration: none;
}

ins {
	background-color: h(conifer);
	color: h(milou);
	@include v(font-size);
}

del {
	color: h(maple);
}

s {
	color: h(dove);
}

strong {
	@include v(font-weight, bold);
}

em {
	font-weight: v(font-weight) !important;

	& > small,
	small > & {
		font-variant: small-caps;
		text-transform: lowercase;
	}
}

small {
	@include v(font-size, small);
}

:is(sub, sup) {
	position: relative;
	vertical-align: baseline;
	font-size: 1em;
	line-height: 0;
	text-transform: initial;
}
sub {
	inset-block-end: 0;
	font-variant-position: sub;
}
sup {
	inset-block-start: 0;
	font-variant-position: super;
}

hr {
	background-color: h(thunder, gamma);
	inline-size: 100%;
	block-size: var(--size-border-thin);
	display: block;
	border: 0;
	position: relative;
	// show the overflow in Edge and IE
	overflow: visible;
}

// Hide elements visually
[hidden]:not([hidden="false"]),
.hidden {
	&:not([href]),
	&[href]:not(:is(:focus, :active)) {
		@include hidden;
	}
}
// Breakpoint-conditional hidden
@each $name, $size in $breakpoints {
	.hidden-below--#{$name} {
		@include media("below:#{$name}") {
			@include hidden;
		}
	}
	.hidden-above--#{$name} {
		@include media("above:#{$name}") {
			@include hidden;
		}
	}
}

// Text Selection
::selection,
::target-text {
	background-color: h(raven);
	color: h(milou);
	text-shadow: none;
}
.canada {
	&,
	* {
		&::selection,
		&::target-text {
			background-color: h(maple);
		}
	}
}

::spelling-error {
	text-decoration: h(maple) wavy underline;
}

::grammar-error {
	text-decoration: h(conifer) wavy underline;
}
