////
/// Code
/// @group base
/// @link https://chrisburnell.com/styleguide/#code-block
////

%collection-monospace {
    @include font-family(monospace);
    font-size: var(--font-scale--1);
    @include v(line-height, medium);
    font-variant-numeric: proportional-nums;
}

%content-monospace-elements {
    @include border-radius;
    padding: calc(var(--measure-one-relative) / 4);
}

%collection-monospace,
del,
ins,
mark {
    // force text to wrap
    @include break-words;

    h1 > &,
    h2 > &,
    %collection-content > & {
        @extend %content-monospace-elements;
    }
}

h1 > code,
h2 > code,
%collection-content > code,
samp {
    @include v(background-color, raven--gamma);
}

kbd {
    @include case(uppercase);
    box-shadow: inset 0 0 0 var(--border-width-hairline) var(--color-kaiser);
}

mark {
    @include v(background-color, highlight);
}

var {
    @include v(color, raven);
    font-style: normal;
    @include v(font-weight, bold);
}

pre {
    margin: 0 0 var(--measure-large);
    tab-size: 4;
    font-size: initial;
    white-space: pre-wrap;
}

// Highlighted Code Blocks
pre[class*="language-"] {
    background-image: linear-gradient(
        to bottom,
        transparent 0,
        transparent calc(var(--measure-gap) - var(--border-width-thin)),
        var(--color-raven--beta) calc(var(--measure-gap) - var(--border-width-thin)),
        var(--color-raven--beta) var(--measure-gap),
        var(--color-mineshaft) var(--measure-gap),
        var(--color-mineshaft) 100%
    );
    @include v(color, white);
    width: auto;
    min-width: 10vw;
    margin-bottom: 0;
    @include v(padding, gutter);
    padding-top: calc(var(--measure-gutter) + var(--measure-gap));
    border-radius: 0 0 var(--border-radius-default) var(--border-radius-default);
    background-clip: padding-box;
    // disallow text from wrapping inside the container
    overflow-x: auto;
    overflow-y: hidden;
    position: relative;
    @include font-family(monospace);

    &,
    code {
        @include v(line-height, code);
    }

    code {
        min-width: 100%;
        display: block;
        overflow-wrap: normal;
        word-break: normal;
        white-space: pre;
    }
}

code[class*="language-"] {
    &::before {
        @include absolute(top-left);
        @include font-family(alpha);
        @include v(background-color, dove);
        @include v(color, white);
        @include v(height, gap);
        display: flex;
        align-items: center;
        padding: 0 var(--measure-gutter);
        border-radius: var(--border-radius-default) var(--border-radius-default) 0 0;
        background-clip: padding-box;
        text-shadow: 0 var(--border-width-hairline) 0 var(--color-mineshaft);
    }

    // Highlighted Code Block Labels
    @each $language, $color in $language-colors {
        &.language-#{$language} {
            &::before {
                background-color: #{$color} !important;
                color: contrasting-color($color, $color-mineshaft, $color-white) !important;
                text-shadow: 0 var(--border-width-hairline) 0 contrasting-color($color, $color-white, $color-mineshaft) !important;
            }
        }
    }
    &.language-html::before {
        content: "HTML";
    }
    &.language-css::before {
        content: "CSS";
    }
    &.language-javascript::before {
        content: "JavaScript";
    }
    &.language-bash::before {
        content: "bash";
    }
    &.language-scss::before {
        content: "SCSS";
    }
    &.language-json::before {
        content: "JSON";
    }
    &.language-yaml::before {
        content: "YAML";
    }
    &.language-liquid::before {
        content: "Liquid";
    }
    &.language-nunjucks::before {
        content: "Nunjucks";
    }
}

/**
 * a11y-dark theme for JavaScript, CSS, and HTML
 * Based on the okaidia theme: https://github.com/PrismJS/prism/blob/gh-pages/themes/prism-okaidia.css
 * @author ericwbailey
 */

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
    color: #d4d0ab;
}

.token.punctuation {
    color: #fefefe;
}

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
    color: #ffa07a;
}

.token.boolean,
.token.number {
    color: #00e0e0;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
    color: #abe338;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
    color: #00e0e0;
}

.token.atrule,
.token.attr-value,
.token.function {
    color: #ffd700;
}

.token.keyword {
    color: #00e0e0;
}

.token.regex,
.token.important {
    color: #ffd700;
}

.token.important,
.token.bold {
    font-weight: bold;
}
.token.italic {
    font-style: italic;
}

.token.entity {
    cursor: help;
}

@media screen and (-ms-high-contrast: active) {
    code[class*='language-'],
    pre[class*='language-'] {
        color: windowText;
        background: window;
    }

    :not(pre) > code[class*='language-'],
    pre[class*='language-'] {
        background: window;
    }

    .token.important {
        background: highlight;
        color: window;
        font-weight: normal;
    }

    .token.atrule,
    .token.attr-value,
    .token.function,
    .token.keyword,
    .token.operator,
    .token.selector {
        font-weight: bold;
    }

    .token.attr-value,
    .token.comment,
    .token.doctype,
    .token.function,
    .token.keyword,
    .token.operator,
    .token.property,
    .token.string {
        color: highlight;
    }

    .token.attr-value,
    .token.url {
        font-weight: normal;
    }
}
