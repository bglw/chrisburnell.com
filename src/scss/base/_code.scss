////
/// Code
/// @group base
/// @link https://chrisburnell.com/styleguide/#code-block
////

%collection-monospace {
	@include font-family(monospace);
	@include v(font-size, small);
	@include v(line-height, medium);
	font-variant-numeric: proportional-nums;
}

%collection-monospace-elements {
	@include v(padding, border-default);
	@include v(border-radius, border-default);
}

%collection-monospace,
del,
ins,
mark {
	// force text to wrap
	@include break-words;

	h1 > &,
	h2 > &,
	%collection-content > &,
	li > & {
		@extend %collection-monospace-elements;
	}
}

h1 > code,
h2 > code,
%collection-content > code,
li > code,
samp {
	background-color: h(raven, gamma);
	user-select: all;
}

kbd {
	@include case(uppercase);
	--color-shadow: #{h(kaiser)};
	@include v(box-shadow, small);
}

mark {
	background-color: h(aspen);
}

var {
	color: h(bowhead);
	font-style: normal;
	font-size: inherit;
	@include v(font-weight, bold);
}

pre {
	margin: 0 0 #{v(measure, large)};
	tab-size: 4;
	font-size: initial;
	white-space: pre-wrap;
}

// Highlighted Code Blocks
pre[class*="language-"] {
	background-image: linear-gradient(to bottom, transparent 0, transparent calc(var(--measure-gap) - var(--measure-border-thin)), h(raven, beta) calc(var(--measure-gap) - var(--measure-border-thin)), h(raven, beta) var(--measure-gap), h(lynx) var(--measure-gap), h(lynx) 100%);
	color: h(milou);
	inline-size: auto;
	min-inline-size: 10vw;
	margin-block-end: 0;
	@include v(padding, gutter);
	padding-block-start: calc(var(--measure-gutter) + var(--measure-gap));
	border-radius: 0 0 var(--measure-border-default) var(--measure-border-default);
	background-clip: padding-box;
	// disallow text from wrapping inside the container
	overflow-inline: auto;
	overflow-block: hidden;
	position: relative;
	@include font-family(monospace);

	&,
	code {
		@include v(line-height, code);
	}

	code {
		background-color: h(lynx);
		min-inline-size: 100%;
		display: block;
		overflow-wrap: normal;
		word-break: normal;
		white-space: pre;
	}
}

code[class*="language-"] {
	&::before {
		@include font-family(alpha);
		@include v(font-size);
		background-color: h(dove);
		color: h(milou);
		@include v(block-size, gap);
		display: flex;
		align-items: center;
		padding: 0 var(--measure-gutter);
		position: absolute;
		top: 0;
		left: 0;
		border-radius: var(--measure-border-default) var(--measure-border-default) 0 0;
		background-clip: padding-box;
	}

	// Highlighted Code Block Labels
	@each $name, $color in $language-colors {
		&.language-#{$name} {
			&::before {
				background-color: v(color, #{$name}) !important;
				color: contrasting-color(v(color, $name, true)) !important;
			}
		}
	}
	&.language-html::before {
		content: "HTML";
	}
	&.language-css::before {
		content: "CSS";
	}
	&.language-javascript::before {
		content: "JavaScript";
	}
	&.language-bash::before {
		content: "bash";
	}
	&.language-scss::before {
		content: "SCSS";
	}
	&.language-json::before {
		content: "JSON";
	}
	&.language-yaml::before {
		content: "YAML";
	}
	&.language-liquid::before {
		content: "Liquid";
	}
	&.language-twig::before {
		content: "Nunjucks";
	}
}

/**
 * a11y-dark theme for JavaScript, CSS, and HTML
 * Based on the okaidia theme: https://github.com/PrismJS/prism/blob/gh-pages/themes/prism-okaidia.css
 * @author ericwbailey
 */

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: #d4d0ab;
}

.token.punctuation {
	color: #fefefe;
}

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
	color: #ffa07a;
}

.token.boolean,
.token.number {
	color: #00e0e0;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #abe338;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
	color: #00e0e0;
}

.token.atrule,
.token.attr-value,
.token.function {
	color: #ffd700;
}

.token.keyword {
	color: #00e0e0;
}

.token.regex,
.token.important {
	color: #ffd700;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}

@media screen and (-ms-high-contrast: active) {
	code[class*="language-"],
	pre[class*="language-"] {
		color: windowText;
		background: window;
	}

	:not(pre) > code[class*="language-"],
	pre[class*="language-"] {
		background: window;
	}

	.token.important {
		background: highlight;
		color: window;
		font-weight: normal;
	}

	.token.atrule,
	.token.attr-value,
	.token.function,
	.token.keyword,
	.token.operator,
	.token.selector {
		font-weight: bold;
	}

	.token.attr-value,
	.token.comment,
	.token.doctype,
	.token.function,
	.token.keyword,
	.token.operator,
	.token.property,
	.token.string {
		color: highlight;
	}

	.token.attr-value,
	.token.url {
		font-weight: normal;
	}
}
