////
/// Maps
/// @group abstracts
////

/// @type Map
/// @prop {String} key - Breakpoint name
/// @prop {Length} value - Breakpoint value
/// @see {Mixin} media
$breakpoints: (
    small: $measure-breakpoint-small,
    medium: $measure-breakpoint-medium,
    large: $measure-breakpoint-large,
    gigantic: $measure-breakpoint-gigantic
);

$site-colors: (
    transparent: $color-transparent,
    bowhead: $color-bowhead,
    raven: $color-raven,
    coyote: $color-coyote,
    bear: $color-bear,
    lynx: $color-lynx,
    canada: $color-canada,
    black: $color-black,
    mineshaft: $color-mineshaft,
    kaiser: $color-kaiser,
    dove: $color-dove,
    alto: $color-alto,
    white: $color-white,
    highlight: $color-highlight,
    black--alpha: $color-black--alpha,
    black--beta: $color-black--beta,
    black--gamma: $color-black--gamma,
    black--delta: $color-black--delta,
    white--alpha: $color-white--alpha,
    white--beta: $color-white--beta,
    white--gamma: $color-white--gamma,
    white--delta: $color-white--delta,
    raven--alpha: $color-raven--alpha,
    raven--beta: $color-raven--beta,
    raven--gamma: $color-raven--gamma,
    raven--delta: $color-raven--delta,
    coyote--alpha: $color-coyote--alpha,
    coyote--beta: $color-coyote--beta,
    coyote--gamma: $color-coyote--gamma,
    coyote--delta: $color-coyote--delta,
    bowhead--alpha: $color-bowhead--alpha,
    bowhead--beta: $color-bowhead--beta,
    bowhead--gamma: $color-bowhead--gamma,
    bowhead--delta: $color-bowhead--delta
);

$palette-colors: (
    bowhead: $color-bowhead,
    raven: $color-raven,
    coyote: $color-coyote,
    canada: $color-canada,
    black: $color-black,
    mineshaft: $color-mineshaft,
    kaiser: $color-kaiser,
    dove: $color-dove,
    alto: $color-alto,
    white: $color-white
);

$highlight-colors: (
    highlight-alpha: $color-highlight-alpha,
    highlight-beta: $color-highlight-beta,
    highlight-gamma: $color-highlight-gamma,
    highlight-delta: $color-highlight-delta,
    highlight-epsilon: $color-highlight-epsilon,
    highlight-zeta: $color-highlight-zeta,
    highlight-eta: $color-highlight-eta,
    highlight-theta: $color-highlight-theta
);

$language-colors: (
    css: $color-css,
    haml: $color-html,
    html: $color-html,
    jade: $color-html,
    javascript: $color-javascript,
    liquid: $color-liquid,
    markdown: $color-markdown,
    nunjucks: $color-nunjucks,
    sass: $color-sass,
    scss: $color-sass,
    liquid-white: $color-liquid-white
);

/// @type Map
/// @prop {String} family - Font Family
/// @prop {String} name - Font Family Friendly Name
/// @prop {String} display - Font Display
/// @prop {String} stretch - Font Stretch
/// @prop {String} style - Font Style
/// @prop {String} variant - Font Variant
/// @prop {Number} weight - Font Weight
/// @prop {String} filename - Font Filename
$font-faces: (
    (
        family: "Heebo",
        name: "Black",
        display: default,
        stretch: default,
        style: normal,
        variant: default,
        weight: default,
        filename: "heebo-black"
    ),
    (
        family: "Proxima Nova",
        name: "Regular",
        display: default,
        stretch: default,
        style: normal,
        variant: default,
        weight: default,
        filename: "proxima-nova-regular"
    ),
    (
        family: "Proxima Nova",
        name: "Italic",
        display: default,
        stretch: default,
        style: italic,
        variant: default,
        weight: default,
        filename: "proxima-nova-italic"
    ),
    (
        family: "Proxima Nova",
        name: "Semibold",
        display: default,
        stretch: default,
        style: normal,
        variant: default,
        weight: bold,
        filename: "proxima-nova-semibold"
    )
) !default;

/// @type Map
/// @prop {Array} key - Aspect Ratio
/// @prop {Length} value - Percentage for sizing
$aspect-ratios: (
    "16-by-9": 56.25%,
    "4-by-3": 75%
) !default;

/// @type Map
/// @prop {String} name - Brand name
/// @prop {Color} color - Icon color
/// @prop {Number} opacity - Brand icon opacity
$brand-details: (
    (
        name: "codepen",
        color: white,
        ratio: 1
    ),
    (
        name: "github",
        color: white,
        ratio: 1
    ),
    (
        name: "lastfm",
        color: lastfm,
        ratio: 1
    ),
    (
        name: "switch",
        color: nintendo,
        ratio: 0.9
    ),
    (
        name: "rss",
        color: white,
        ratio: 0.775
    ),
    (
        name: "spotify",
        color: spotify,
        ratio: 0.925
    ),
    (
        name: "twitter",
        color: twitter,
        ratio: 0.925
    ),
    (
        name: "article",
        color: white,
        ratio: 0.9
    ),
    (
        name: "feather",
        color: white,
        ratio: 0.725
    ),
    (
        name: "heart",
        color: white,
        ratio: 1
    ),
    (
        name: "link",
        color: white,
        ratio: 1
    ),
    (
        name: "search",
        color: white,
        ratio: 1
    ),
    (
        name: "tag",
        color: white,
        ratio: 1
    )
);

/// @type Map
/// @see {Mixin} v
$tokens: (
    measure: (
        breakpoint-small: $measure-breakpoint-small,
        breakpoint-medium: $measure-breakpoint-medium,
        breakpoint-large: $measure-breakpoint-large,
        breakpoint-gigantic: $measure-breakpoint-gigantic,
        gap: $measure-gap,
        gutter: $measure-gutter,
        avatar: $measure-avatar,
        avatar-small: $measure-avatar-small,
        tiny: $measure-tiny,
        small: $measure-small,
        medium: $measure-medium,
        large: $measure-large,
        gigantic: $measure-gigantic,
        line-length-minimum: $measure-line-length-minimum,
        line-length-maximum: $measure-line-length-maximum,
        line-length-clamp: $measure-line-length-clamp
    ),
    opacity: (
        alpha: $opacity-alpha,
        beta: $opacity-beta,
        gamma: $opacity-gamma,
        delta: $opacity-delta
    ),
    color: map-multiple-merge($site-colors, $highlight-colors, $language-colors),
    border-width: (
        default: $border-width-default,
        thin: $border-width-thin,
        hairline: $border-width-hairline,
        button: $border-width-button
    ),
    border-style: (
        default: $border-style-default,
        alternate: $border-style-alternate
    ),
    border-radius: (
        default: $border-radius-default,
        hairline: $border-radius-hairline
    ),
    font-family: (
        default: $font-family-default,
        alpha: $font-family-alpha,
        serif: $font-family-serif,
        monospace: $font-family-monospace
    ),
    font-weight: (
        default: $font-weight-default,
        bold: $font-weight-bold
    ),
    line-height: (
        default: $line-height-default,
        small: $line-height-small,
        medium: $line-height-medium,
        code: $line-height-code
    ),
    letter-spacing: (
        default: $letter-spacing-default,
        uppercase: $letter-spacing-uppercase
    ),
    transition-duration: (
        default: $transition-duration-default,
        long: $transition-duration-long
    ),
    transition-function: (
        default: $transition-function-default,
        alternate: $transition-function-alternate
    ),
    z-index: (
        below: $z-index-below,
        root: $z-index-root,
        default: $z-index-default,
        above: $z-index-above,
        modal: $z-index-modal,
        dialog: $z-index-dialog,
        notification: $z-index-notification
    )
);
$bowhead-tokens: $tokens;

/// @type Map
/// @see {Mixin} v
$bowhead-property-map: (
    width: measure,
    min-width: measure,
    min-inline-size: measure,
    max-width: measure,
    max-inline-size: measure,
    height: measure,
    min-height: measure,
    min-block-size: measure,
    max-height: measure,
    max-block-size: measure,
    padding: measure,
    padding-block: measure,
    padding-inline: measure,
    padding-top: measure,
    padding-block-start: measure,
    padding-right: measure,
    padding-inline-end: measure,
    padding-bottom: measure,
    padding-block-end: measure,
    padding-left: measure,
    padding-inline-start: measure,
    margin: measure,
    margin-block: measure,
    margin-inline: measure,
    margin-top: measure,
    margin-block-start: measure,
    margin-right: measure,
    margin-inline-end: measure,
    margin-bottom: measure,
    margin-block-end: measure,
    margin-left: measure,
    margin-inline-start: measure,
    outline-offset: measure,
    flex-basis: measure,
    gap: measure,
    grid-gap: measure,
    column-gap: measure,
    row-gap: measure,
    top: measure,
    bottom: measure,
    left: measure,
    right: measure,
    background-color: color,
    color: color,
    caret-color: color,
    border-color: color,
    border-block-color: color,
    border-inline-color: color,
    border-top-color: color,
    border-block-start-color: color,
    border-right-color: color,
    border-inline-start-color: color,
    border-bottom-color: color,
    border-block-end-color: color,
    border-left-color: color,
    border-inline-end-color: color,
    outline-color: color,
    fill: color,
    stroke: color,
    text-decoration-color: color,
    text-emphasis-color: color,
    border-style: border-style,
    border-block-style: border-style,
    border-inline-style: border-style,
    border-top-style: border-style,
    border-block-start-style: border-style,
    border-right-style: border-style,
    border-inline-start-style: border-style,
    border-bottom-style: border-style,
    border-block-end-style: border-style,
    border-left-style: border-style,
    border-inline-end-style: border-style,
    outline-style: border-style,
    border-width: border-width,
    border-block: border-width,
    border-inline: border-width,
    border-top-width: border-width,
    border-block-start-width: border-width,
    border-right-width: border-width,
    border-inline-start-width: border-width,
    border-bottom-width: border-width,
    border-block-end-width: border-width,
    border-left-width: border-width,
    border-inline-end-width: border-width,
    outline-width: border-width,
    text-decoration-thickness: border-width,
    text-underline-offset: border-width,
    border-radius: border-radii,
    border-top-left-radius: border-radii,
    border-start-start-radius: border-radii,
    border-top-right-radius: border-radii,
    border-start-end-radius: border-radii,
    border-bottom-right-radius: border-radii,
    border-end-end-radius: border-radii,
    border-bottom-left-radius: border-radii,
    border-end-start-radius: border-radii,
    opacity: opacity,
    font-family: font-family,
    font-weight: font-weight,
    letter-spacing: letter-spacing,
    line-height: line-height,
    transition-duration: transition-duration,
    transition-function: transition-function,
    z-index: z-index
);
