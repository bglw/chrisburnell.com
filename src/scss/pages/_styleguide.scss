////
/// Style Guide
/// @group pages
/// @link https://chrisburnell.com/styleguide/
////

.palette-list {
	background-color: h(milou);
	inline-size: 100%;
	display: flex;
	flex-wrap: wrap;

	@include media("screen", "below:small") {
		flex-direction: column;
	}

	li {
		@include tabular-lining-numerals;
		padding: #{v(measure, medium)} 0;
		vertical-align: middle;
		@include v(font-size, small);
		text-align: center;
		white-space: nowrap;

		@include media("screen", "below:small") {
			flex: 1 0 100%;
		}

		@include media("screen", "above:small", "below:large") {
			flex: 1 0 50%;
		}

		@include media("screen", "above:large") {
			flex: 1 0 20%;
		}

		%collection-headings {
			margin-block-end: 0;
			@include v(font-size, default);
			text-transform: capitalize;
		}
	}

	&[aria-expanded="false"] {
		li {
			@include media("screen", "above:large") {
				flex: 1 0 33.333%;
			}
		}

		.extra,
		[class*="hidden"] {
			display: none;
		}
	}
}
@each $name, $color in $palette {
	.background--#{$name} {
		background-color: h($name);
		color: contrasting-color($color);
	}
	@each $opacity, $value in $opacities {
		.background--#{$name}--#{$opacity} {
			background-color: h($name, $opacity);
			$rgba: rgba(red($color), green($color), blue($color), $value);
			color: contrasting-color(mix(map-get($palette, "milou"), $rgba));
		}
	}
}

.measure-example {
	background-color: h(alto);
	background-image: linear-gradient(to bottom, h(maple), h(maple));
	background-position: center center;
	background-size: 100% v(measure, border-thin);
	background-repeat: no-repeat;
	@include v(block-size, medium);
	display: block;
}
.measure-example--tiny {
	@include v(inline-size, tiny);
}
.measure-example--small {
	@include v(inline-size, small);
}
.measure-example--medium {
	@include v(inline-size, medium);
}
.measure-example--large {
	@include v(inline-size, large);
}
.measure-example--gigantic {
	@include v(inline-size, gigantic);
}
.measure-example--responsive {
	@include v(inline-size, line-length-clamp);
}

.transition-example {
	position: relative;
	margin-block-end: calc(v(measure, large) + v(measure, medium));

	&::before {
		content: "(Hover to interact.)";
		position: absolute;
		top: 100%;
		left: 50%;
		transform: translateX(-50%);
		color: h(kaiser);
		@include v(margin-block-start, small);
	}

	@include media("coarse") {
		&::before {
			content: "(Tap to interact.)";
		}
	}
}
.transition-example__demo {
	border-block-start: var(--measure-border-thin) solid h(raven, beta);
	border-radius: 0 0 var(--measure-border-default) var(--measure-border-default);
	@include transition(color);
	inline-size: 100%;
	@include v(max-inline-size, line-length-clamp);
	block-size: calc(var(--measure-large) * 1.5);
	display: flex;
	align-items: center;
	justify-content: center;
	border: v(measure, border-thin) solid h(alto);
	margin-inline-start: auto;
	margin-inline-end: auto;
	overflow-inline: hidden;
	position: relative;
	// line-height: strip-unit($measure-large * 1.5 - $measure-border-thin * 2);
	text-align: center;
	@include v(box-shadow, medium);
	@include v(z-index, above);

	&:is(:hover, :focus) {
		color: h(milou);
	}

	&::before {
		content: "";
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		background-color: h(kaiser);
		@include v(border-radius, border-thin);
		@include v(z-index, below);
	}

	.transition-example--slide & {
		cursor: e-resize;

		&::before {
			@include transition(transform);
			// ugly, but a single pixel peeks out at certain zoom levels
			transform: translateX(-101%);
		}

		&:is(:hover, :focus) {
			&::before {
				transform: translateX(0);
			}
		}
	}

	.transition-example--fade & {
		cursor: cell;

		&::before {
			@include transition(opacity);
			opacity: 0;
		}

		&:is(:hover, :focus) {
			&::before {
				opacity: 1;
			}
		}
	}
}
