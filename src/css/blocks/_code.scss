// Highlighted Code Blocks
pre[class*="language-"] {
	// prettier-ignore
	background-image: linear-gradient(to bottom,
		transparent 0,
		transparent calc(var(--size-gap) - var(--size-border-thin)),
		h(raven, beta) calc(var(--size-gap) - var(--size-border-thin)),
		h(raven, beta) var(--size-gap),
		h(lynx) var(--size-gap),
		h(lynx) 100%
	);
	color: h(milou);
	inline-size: auto;
	min-inline-size: 10vw;
	margin-block-end: 0;
	padding: var(--size-gutter);
	padding-block-start: calc(var(--size-gutter) + var(--size-gap));
	border-radius: 0 0 var(--size-border-default) var(--size-border-default);
	background-clip: padding-box;
	// disallow text from wrapping inside the container
	overflow-x: auto;
	overflow-y: hidden;
	scrollbar-gutter: stable;
	position: relative;
	font-family: var(--font-family-monospace);

	&,
	code {
		line-height: var(--line-height-code);
	}

	code {
		background-color: h(lynx);
		min-inline-size: 100%;
		display: block;
		overflow-wrap: normal;
		word-break: normal;
		white-space: pre;
	}

	&.language-bash {
		margin-block-start: 0 !important;
	}
}

code[class*="language-"] {
	&::before {
		background-color: h(dove);
		color: h(milou);
		block-size: var(--size-gap);
		display: flex;
		align-items: center;
		padding-inline: var(--size-gutter);
		position: absolute;
		inset-block-start: 0;
		inset-inline-start: 0;
		border-radius: var(--size-border-default) var(--size-border-default) 0 0;
		background-clip: padding-box;
	}

	// Highlighted Code Block Labels
	@each $name, $color in $language-colors {
		&.language-#{$name} {
			&::before {
				background-color: $color !important;
				color: contrasting-color($color) !important;
			}
		}
	}
	&.language-html::before {
		content: "HTML";
	}
	&.language-css::before {
		content: "CSS";
	}
	&.language-javascript::before {
		content: "JavaScript";
	}
	&.language-scss::before {
		content: "SCSS";
	}
	&.language-json::before {
		content: "JSON";
	}
	&.language-yaml::before {
		content: "YAML";
	}
	&.language-liquid::before {
		content: "Liquid";
	}
	&.language-twig::before {
		content: "Nunjucks";
	}
}

/**
 * a11y-dark theme for JavaScript, CSS, and HTML
 * Based on the okaidia theme: https://github.com/PrismJS/prism/blob/gh-pages/themes/prism-okaidia.css
 * @author ericwbailey
 */

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: #d4d0ab;
}

.token.punctuation {
	color: #fefefe;
}

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
	color: #ffa07a;
}

.token.boolean,
.token.number {
	color: #00e0e0;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #abe338;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
	color: #00e0e0;
}

.token.atrule,
.token.attr-value,
.token.function {
	color: #ffd700;
}

.token.keyword {
	color: #00e0e0;
}

.token.regex,
.token.important {
	color: #ffd700;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}

@media screen and (-ms-high-contrast: active) {
	code[class*="language-"],
	pre[class*="language-"] {
		color: windowText;
		background: window;
	}

	:not(pre) > code[class*="language-"],
	pre[class*="language-"] {
		background: window;
	}

	.token.important {
		background: highlight;
		color: window;
		font-weight: normal;
	}

	.token.atrule,
	.token.attr-value,
	.token.function,
	.token.keyword,
	.token.operator,
	.token.selector {
		font-weight: bold;
	}

	.token.attr-value,
	.token.comment,
	.token.doctype,
	.token.function,
	.token.keyword,
	.token.operator,
	.token.property,
	.token.string {
		color: highlight;
	}

	.token.attr-value,
	.token.url {
		font-weight: normal;
	}
}
